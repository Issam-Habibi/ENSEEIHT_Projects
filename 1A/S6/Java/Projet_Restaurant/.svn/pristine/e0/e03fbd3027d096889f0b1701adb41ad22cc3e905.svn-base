import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;


public class Sign_In2 {

	JFrame windowLog;
	JLabel l1;
	JTextField text;
	JLabel l2;
	JPasswordField passwd;
	JButton b, guest, signup;
	boolean IsEmployee;
	Employee Employee;
	private final ActionListener B_Submit = new Submit();
	//private final ActionListener B_Guest = new as_Guest();
	private final ActionListener B_SignUp = new SignUp();
	
	/**
	 * @author Hamza Moudenne & Younes Saoudi
	 * Constructor of login side
	 */
	public Sign_In2() {
		GUI log = new GUI();
		//empty width = 230 on each side
		//used with 340
		//between label and text : 160
		this.windowLog = log.createWindow("Sign In", 600, 400);
		this.windowLog.getContentPane().setBackground(new Color(196,160,214));
		Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
		this.windowLog.setLocation(dim.width/2-this.windowLog.getSize().width/2, dim.height/2-this.windowLog.getSize().height/2);
		
		this.l1 = log.createLabel("Username", 200, 60, 80, 30);
		this.text = log.createText(200, 95, 200, 30);
		this.l2 = log.createLabel("Password", 200, 135, 80, 30);
		this.passwd = log.createPasswd(200, 165, 200, 30);
		this.b = log.createButton("Login", 215, 235, 80, 30, Color.BLACK, Color.WHITE);
		this.guest = log.createButton("Continue without logging in", 205, 280, 190, 30, Color.WHITE, Color.BLACK);
		this.signup = log.createButton("Sign Up", 305, 235, 80, 30, new Color(152, 206, 224), Color.WHITE);

		
		try {
		     GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
		     Font Museo_300 = Font.createFont(Font.TRUETYPE_FONT, new File("fonts/Museo Slab W00 300.ttf")).deriveFont(15f);
		     ge.registerFont(Museo_300);
		     this.l1.setFont(Museo_300);
		     this.l2.setFont(Museo_300);
		     this.text.setFont(Museo_300);
		} catch (IOException|FontFormatException e) {
		     e.printStackTrace();
		}


		windowLog.add(l1);

		windowLog.add(text);

		windowLog.add(l2);

		windowLog.add(passwd);

		windowLog.add(b);
		windowLog.add(guest);
		windowLog.add(signup);
		b.addActionListener(B_Submit);
		//guest.addActionListener(B_Guest);
		signup.addActionListener(B_SignUp);
		
		windowLog.setVisible(true);
	}

	public boolean checkCredentials(String ID, String passwd) {
		JSONParser parser = new JSONParser();
		try {
			JSONArray userList = (JSONArray) parser.parse(new FileReader("data/users.json"));

			for (Object user : userList) {
				JSONObject usr = (JSONObject) user;

				String username = (String) usr.get("Username");
				String password = (String) usr.get("Password");
				IsEmployee = (!((String) usr.get("EmployeeID")).equals(""));
//	public Employee(String Prenom, String Nom, String identifiant, String Function) {
				Employee = new Employee((String)usr.get("First name"), 
						(String) usr.get("Last name"), (String) usr.get("EmployeeID"), (String) usr.get("Function"));
				
				if (ID.equals(username) && passwd.equals(password)) {
					return true;
				}
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (ParseException e) {
			e.printStackTrace();
		}
		return false;
	}

	public class Submit implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			if (checkCredentials(text.getText(), new String(passwd.getPassword()))) {
				//OLD: System.out.println("success");
				//Modifié par Younes:
				//JOptionPane.showMessageDialog(windowLog,"Logged in successfully.");
				//Modifié par Younes:
				if(IsEmployee) {
					new EmployeeInterface(Employee);
				} else {
					//new Menu_2(text.getText());
				}
				windowLog.setVisible(false);
			} else {
				JOptionPane.showMessageDialog(windowLog,"Wrong username or password.");
			}
		}
	}
	public class asGuest implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			//new Menu_2(null);
		}
	}
	public class SignUp implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			windowLog.setVisible(false);
			Employee Employee2 = new Employee("","","","Null");
			new Sign_Up2(Employee2);
		}
	}
}
